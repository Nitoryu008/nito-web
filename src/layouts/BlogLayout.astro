---
import type { InferEntrySchema } from "astro:content";
import Section from "../components/Section.astro";
import { format } from "../utils";
import { css } from "../../styled-system/css";
import { markdown } from "../recipes/markdown";
import PageLayout from "./PageLayout.astro";
import type { MarkdownHeading } from "astro";

interface Props {
  frontmatter: InferEntrySchema<"blog">;
  headings: MarkdownHeading[];
}

const { frontmatter, headings } = Astro.props;

const title = css({
  marginBottom: "16",
  paddingBottom: "6",
  pos: "relative",
  borderBottom: "1px solid {colors.text.dark}",
  fontSize: "4xl",
  textWrap: "unset",
  fontWeight: "700",
});

const headingStyle = css({
  marginBottom: "16",
  "& li": {
    padding: "4",
    color: "#777",
    borderRadius: "xl",
    _hover: {
      bg: "#CCC",
      color: "text",
    },
  },
  "& .heading-3": {
    marginLeft: "8",
  },
});
---

<PageLayout
  title={["BLOG", frontmatter.title]}
  pageType="article"
  ogImage={frontmatter.image}
  ogAlt={frontmatter.title}
>
  <Section heading="BLOG" href="/blog">
    <time
      datetime={frontmatter.pubDate.toISOString()}
      class={css({
        display: "block",
        marginBottom: "2",
        color: "text.gray",
      })}
    >
      {format(frontmatter.pubDate)}
    </time>
    <h2 class={title}>
      {frontmatter.title}
    </h2>
    <ul class={headingStyle}>
      {
        headings.map(
          ({ depth, slug, text }) =>
            (depth == 2 || depth == 3) && (
              <li class={`heading-${depth}`}>
                <a href={`#${slug}`}>{text}</a>
              </li>
            )
        )
      }
    </ul>
    <div class={markdown({ type: "blog" })}>
      <slot />
    </div>
  </Section>
</PageLayout>
